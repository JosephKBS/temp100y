xrange <- c( -1, 0, 1)
fun <- (1/3)
problem2function(xrange, fun)
View(table)
problem2function <- function(xrange, fun){
lower <- c(min(xrange)-1)
upper <- c(min(xrange)+1)
xrange_ext <- as.matrix((c(lower, xrange, upper) ))
table <- data.frame(matrix(nrow = dim(xrange_ext)[1] , ncol = 2))
for (i in 1:dim(xrange_ext)[1]){
table[i,1] <- t(xrange_ext)[i]
# if (table[i,1] < min(xrange) | table[i,1] > max(xrange) ){
#   table[i,2]=0
# } else {
table[1,2] <- 0
table[i,2] <- fun*xrange_ext[i,1]
table[5,2] <- 0
}
plot(table[,1], table[,2], type='l', col="blue")
}
}
problem2function <- function(xrange, fun){
lower <- c(min(xrange)-1)
upper <- c(min(xrange)+1)
xrange_ext <- as.matrix((c(lower, xrange, upper) ))
table <- data.frame(matrix(nrow = dim(xrange_ext)[1] , ncol = 2))
for (i in 1:dim(xrange_ext)[1]){
table[i,1] <- t(xrange_ext)[i]
# if (table[i,1] < min(xrange) | table[i,1] > max(xrange) ){
#   table[i,2]=0
# } else {
table[1,2] <- 0
table[i,2] <- fun*xrange_ext[i,1]
table[5,2] <- 0
}
plot(table[,1], table[,2], type='l', col="blue")
}
# plot(x, fun, type='l')
xrange <- c( -1, 0, 1)
fun <- (1/3)
problem2function(xrange, fun)
View(table)
problem2function <- function(xrange, fun){
lower <- c(min(xrange)-1)
upper <- c(min(xrange)+1)
xrange_ext <- as.matrix((c(lower, xrange, upper) ))
table <- data.frame(matrix(nrow = dim(xrange_ext)[1] , ncol = 2))
for (i in 1:dim(xrange_ext)[1]){
table[i,1] <- t(xrange_ext)[i]
# if (table[i,1] < min(xrange) | table[i,1] > max(xrange) ){
#   table[i,2]=0
# } else {
#    table[1,2] <- 0
table[i,2] <- fun*xrange_ext[i,1]
#    table[5,2] <- 0
}
plot(table[,1], table[,2], type='l', col="blue")
}
# plot(x, fun, type='l')
View(table)
problem2function <- function(xrange, fun){
lower <- c(min(xrange)-1)
upper <- c(min(xrange)+1)
xrange_ext <- as.matrix((c(lower, xrange, upper) ))
table <- data.frame(matrix(nrow = dim(xrange_ext)[1] , ncol = 2))
for (i in 1:dim(xrange_ext)[1]){
table[i,1] <- t(xrange_ext)[i]
table[i,2] <- fun*xrange_ext[i,1]
# if (table[i,1] < min(xrange) | table[i,1] > max(xrange) ){
#   table[i,2]=0
# } else {
#    table[1,2] <- 0
#    table[i,2] <- fun*xrange_ext[i,1]
#    table[5,2] <- 0
}
plot(table[,1], table[,2], type='l', col="blue")
}
# plot(x, fun, type='l')
xrange <- c( -1, 0, 1)
fun <- (1/3)
problem2function(xrange, fun)
View(table)
problem2function <- function(xrange, fun){
lower <- c(min(xrange)-1)
upper <- c(min(xrange)+1)
xrange_ext <- as.matrix((c(lower, xrange, upper) ))
table <- data.frame(matrix(nrow = dim(xrange_ext)[1] , ncol = 2))
for (i in 1:dim(xrange_ext)[1]){
table[i,1] <- t(xrange_ext)[i]
table[i,2] <- fun*xrange_ext[i,1]
# if (table[i,1] < min(xrange) | table[i,1] > max(xrange) ){
#   table[i,2]=0
# } else {
table[1,2] <- 0
#    table[i,2] <- fun*xrange_ext[i,1]
table[5,2] <- 0
}
plot(table[,1], table[,2], type='l', col="blue")
}
# plot(x, fun, type='l')
xrange <- c( -1, 0, 1)
fun <- (1/3)
problem2function(xrange, fun)
# empty data frame
table <- data.frame(matrix(nrow = dim(xrange_ext)[1] , ncol = 2))
for (i in 1:dim(xrange_ext[1])){
table[i,1] = t(xrange_ext)[i]
table[i,2] = fun*xrange_ext[i,1]
}
# empty data frame
table <- data.frame(matrix(nrow = dim(xrange_ext)[1] , ncol = 2))
for (i in 1:dim(xrange_ext)[1]){
table[i,1] = t(xrange_ext)[i]
table[i,2] = fun*xrange_ext[i,1]
}
View(table)
# empty data frame
table <- data.frame(matrix(nrow = dim(xrange_ext)[1] , ncol = 2))
for (i in 1:dim(xrange_ext)[1]){
table[i,1] = t(xrange_ext)[i]
table[i,2] = fun*xrange_ext[i,1]
table[1,2] <- 0
table[5,2] <- 0
}
View(table)
problem2function <- function(xrange, fun){
lower <- c(min(xrange)-1)
upper <- c(min(xrange)+1)
xrange_ext <- as.matrix((c(lower, xrange, upper) ))
table <- data.frame(matrix(nrow = dim(xrange_ext)[1] , ncol = 2))
# empty data frame
table <- data.frame(matrix(nrow = dim(xrange_ext)[1] , ncol = 2))
for (i in 1:dim(xrange_ext)[1]){
table[i,1] = t(xrange_ext)[i]
table[i,2] = fun*xrange_ext[i,1]
table[1,2] <- 0
table[5,2] <- 0
}
plot(table[,1], table[,2], type='l', col="blue")
}
View(table)
xrange <- c( -1, 0, 1)
fun <- (1/3)
problem2function(xrange, fun)
View(table)
xrange <- c( -1, 0, 1)
fun <- (1/3)
problem2function(xrange_ext, fun)
xrange <- c( -1, 0, 1)
fun <- (1/3)
problem2function(xrange, fun)
View(table)
problem2function <- function(xrange, fun){
lower <- c(min(xrange)-1)
upper <- c(max(xrange)+1)
xrange_ext <- as.matrix((c(lower, xrange, upper) ))
table <- data.frame(matrix(nrow = dim(xrange_ext)[1] , ncol = 2))
# empty data frame
table <- data.frame(matrix(nrow = dim(xrange_ext)[1] , ncol = 2))
for (i in 1:dim(xrange_ext)[1]){
table[i,1] = t(xrange_ext)[i]
table[i,2] = fun*xrange_ext[i,1]
table[1,2] <- 0
table[5,2] <- 0
}
plot(table[,1], table[,2], type='l', col="blue")
}
xrange <- c( -1, 0, 1)
fun <- (1/3)
problem2function(xrange, fun)
problem2function <- function(xrange, fun){
lower <- c(min(xrange)-1)
lower_li <- c(min(xrange)-0.001)
upper_li <- c(max(xrange)+0.001)
upper <- c(max(xrange)+1)
xrange_ext <- as.matrix((c(lower,lower_li, xrange, upper_li,  upper) ))
table <- data.frame(matrix(nrow = dim(xrange_ext)[1] , ncol = 2))
# empty data frame
table <- data.frame(matrix(nrow = dim(xrange_ext)[1] , ncol = 2))
for (i in 1:dim(xrange_ext)[1]){
table[i,1] = t(xrange_ext)[i]
table[i,2] = fun*xrange_ext[i,1]
table[1,2] <- 0
table[2,2] <- 0
table[dim(xrange_ext)[1]-1,2] <- 0
table[dim(xrange_ext)[1],2] <- 0
}
plot(table[,1], table[,2], type='l', col="blue")
}
xrange <- c( -1, 0, 1)
fun <- (1/3)
problem2function(xrange, fun)
problem2function <- function(xrange, fun){
lower <- c(min(xrange)-1)
lower_li <- c(min(xrange)-0.001)
upper_li <- c(max(xrange)+0.001)
upper <- c(max(xrange)+1)
xrange_ext <- as.matrix((c(lower,lower_li, xrange, upper_li,  upper) ))
table <- data.frame(matrix(nrow = dim(xrange_ext)[1] , ncol = 2))
# empty data frame
table <- data.frame(matrix(nrow = dim(xrange_ext)[1] , ncol = 2))
for (i in 1:dim(xrange_ext)[1]){
table[i,1] = t(xrange_ext)[i]
x <-xrange_ext[i,1]
table[i,2] = fun
table[1,2] <- 0
table[2,2] <- 0
table[dim(xrange_ext)[1]-1,2] <- 0
table[dim(xrange_ext)[1],2] <- 0
}
plot(table[,1], table[,2], type='l', col="blue")
}
xrange <- c( -1, 0, 1)
fun <- (1/3)*x
problem2function(xrange, fun)
View(table)
problem2function <- function(xrange, fun){
lower <- c(min(xrange)-1)
lower_li <- c(min(xrange)-0.001)
upper_li <- c(max(xrange)+0.001)
upper <- c(max(xrange)+1)
xrange_ext <- as.matrix((c(lower,lower_li, xrange, upper_li,  upper) ))
table <- data.frame(matrix(nrow = dim(xrange_ext)[1] , ncol = 2))
# empty data frame
table <- data.frame(matrix(nrow = dim(xrange_ext)[1] , ncol = 2))
for (i in 1:dim(xrange_ext)[1]){
table[i,1] = t(xrange_ext)[i]
x <-xrange_ext[i,1]
table[i,2] = fun
table[1,2] <- 0
table[2,2] <- 0
table[dim(xrange_ext)[1]-1,2] <- 0
table[dim(xrange_ext)[1],2] <- 0
}
plot(table[,1], table[,2], type='l', col="blue")
}
xrange <- c( -1, 0, 1)
fun <- (1/3)*x
problem2function(xrange, fun)
problem2function <- function(xrange, fun){
lower <- c(min(xrange)-1)
lower_li <- c(min(xrange)-0.001)
upper_li <- c(max(xrange)+0.001)
upper <- c(max(xrange)+1)
xrange_ext <- as.matrix((c(lower,lower_li, xrange, upper_li,  upper) ))
table <- data.frame(matrix(nrow = dim(xrange_ext)[1] , ncol = 2))
# empty data frame
table <- data.frame(matrix(nrow = dim(xrange_ext)[1] , ncol = 2))
for (i in 1:dim(xrange_ext)[1]){
table[i,1] = t(xrange_ext)[i]
x[i] <-xrange_ext[i,1]
table[i,2] = fun
table[1,2] <- 0
table[2,2] <- 0
table[dim(xrange_ext)[1]-1,2] <- 0
table[dim(xrange_ext)[1],2] <- 0
}
plot(table[,1], table[,2], type='l', col="blue")
}
xrange <- c( -1, 0, 1)
fun <- (1/3)*x
problem2function(xrange, fun)
problem2function <- function(xrange, fun){
lower <- c(min(xrange)-1)
lower_li <- c(min(xrange)-0.001)
upper_li <- c(max(xrange)+0.001)
upper <- c(max(xrange)+1)
xrange_ext <- as.matrix((c(lower,lower_li, xrange, upper_li,  upper) ))
table <- data.frame(matrix(nrow = dim(xrange_ext)[1] , ncol = 2))
# empty data frame
table <- data.frame(matrix(nrow = dim(xrange_ext)[1] , ncol = 2))
for (i in 1:dim(xrange_ext)[1]){
table[i,1] = t(xrange_ext)[i]
for(j in 1:dim(xrange_ext)[1]){
x[j] <-xrange_ext[j,1]
}
table[i,2] = fun
table[1,2] <- 0
table[2,2] <- 0
table[dim(xrange_ext)[1]-1,2] <- 0
table[dim(xrange_ext)[1],2] <- 0
}
plot(table[,1], table[,2], type='l', col="blue")
}
xrange <- c( -1, 0, 1)
fun <- (1/3)*x
problem2function(xrange, fun)
View(x)
problem2function <- function(xrange, fun){
lower <- c(min(xrange)-1)
upper <- c(min(xrange)+1)
xrange_ext <- as.matrix((c(lower, xrange, upper) ))
table <- data.frame(matrix(nrow = dim(xrange_ext)[1] , ncol = 2))
for (i in 1:dim(xrange_ext)[1]){
table[i,1] <- t(xrange_ext)[i]
table[i,2] <- fun*xrange_ext[i,1]
# if (table[i,1] < min(xrange) | table[i,1] > max(xrange) ){
#   table[i,2]=0
# } else {
table[1,2] <- 0
#    table[i,2] <- fun*xrange_ext[i,1]
table[5,2] <- 0
}
plot(table[,1], table[,2], type='l', col="blue")
}
# plot(x, fun, type='l')
problem2function <- function(xrange, fun){
lower <- c(min(xrange)-1)
lower_li <- c(min(xrange)-0.001)
upper_li <- c(max(xrange)+0.001)
upper <- c(max(xrange)+1)
xrange_ext <- as.matrix((c(lower,lower_li, xrange, upper_li,  upper) ))
table <- data.frame(matrix(nrow = dim(xrange_ext)[1] , ncol = 2))
# empty data frame
table <- data.frame(matrix(nrow = dim(xrange_ext)[1] , ncol = 2))
for (i in 1:dim(xrange_ext)[1]){
table[i,1] = t(xrange_ext)[i]
for(j in 1:dim(xrange_ext)[1]){
x[j] <-xrange_ext[j,1]
}
table[i,2] = fun
table[1,2] <- 0
table[2,2] <- 0
table[dim(xrange_ext)[1]-1,2] <- 0
table[dim(xrange_ext)[1],2] <- 0
}
plot(table[,1], table[,2], type='l', col="blue")
}
problem2function <- function(xrange, fun){
lower <- c(min(xrange)-1)
lower_li <- c(min(xrange)-0.001)
upper_li <- c(max(xrange)+0.001)
upper <- c(max(xrange)+1)
xrange_ext <- as.matrix((c(lower,lower_li, xrange, upper_li,  upper) ))
table <- data.frame(matrix(nrow = dim(xrange_ext)[1] , ncol = 2))
# empty data frame
table <- data.frame(matrix(nrow = dim(xrange_ext)[1] , ncol = 2))
for (i in 1:dim(xrange_ext)[1]){
table[i,1] = t(xrange_ext)[i]
for(j in 1:dim(xrange_ext)[1]){
xx[j] <-xrange_ext[j,1]
}
table[i,2] = fun
table[1,2] <- 0
table[2,2] <- 0
table[dim(xrange_ext)[1]-1,2] <- 0
table[dim(xrange_ext)[1],2] <- 0
}
plot(table[,1], table[,2], type='l', col="blue")
}
xrange <- c( -1, 0, 1)
fun <- (1/3)*xx
problem2function <- function(xrange, fun){
lower <- c(min(xrange)-1)
lower_li <- c(min(xrange)-0.001)
upper_li <- c(max(xrange)+0.001)
upper <- c(max(xrange)+1)
xrange_ext <- as.matrix((c(lower,lower_li, xrange, upper_li,  upper) ))
table <- data.frame(matrix(nrow = dim(xrange_ext)[1] , ncol = 2))
# empty data frame
table <- data.frame(matrix(nrow = dim(xrange_ext)[1] , ncol = 2))
for (i in 1:dim(xrange_ext)[1]){
table[i,1] = t(xrange_ext)[i]
for(j in 1:dim(xrange_ext)[1]){
xx[j] <-xrange_ext[j,1]
}
table[i,2] = fun
table[1,2] <- 0
table[2,2] <- 0
table[dim(xrange_ext)[1]-1,2] <- 0
table[dim(xrange_ext)[1],2] <- 0
}
plot(table[,1], table[,2], type='l', col="blue")
}
knitr::opts_chunk$set(echo = TRUE)
i <- 1
ridge_new<- numeric()
glo<- as.numeric(df_g_y[,2])
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(ggthemes)
co2emi <- read.csv("./data/annual-co2-emissions-per-country (1).csv")[22851:23019,3:4]
temp_ano <-  read.csv("./data/temperature-anomaly.csv")[1:169,2:3]
glotemp <-  read.csv("./data/globaltempfrom1880to2019.csv", header = TRUE)[2:141,1:14]
# change to dataframe
df <- data.frame( rbind(co2emi[,2], temp_ano[,2], temp_ano[,1] ))
# transpose
df <- as.data.frame(t(as.matrix(df)))
# rowname
rownames(df)<-c()
colnames(df) <- c("co2", "temp_anomaly", "year")
head(df)
str(df)
df_norm <- scale(df[,1:2])
df_norm <- data.frame(  cbind( df_norm, df$year) )
colnames(df_norm) <- c("co2" ,"temp_anomaly", "year")
head(df_norm)
ggplot(df_norm, aes(year))+
geom_line(aes(y=co2, col="co2 emission") ) +
geom_line(aes(y=df_norm$temp_anomaly, col="temp anomaly")) +
labs(title="Global temperature anomaly and co2 emission",
caption="Source: U.S. EPICA, NOAA", x="Years", y="Scaled carbon dioxide emission")+
theme_economist()
ggplot(df_norm, aes(x=year, y=temp_anomaly)) +
geom_point( color="blue", alpha=0.3, size=2) +
geom_line(aes(y=co2, col="co2")) +
labs(title="Carbon Dioxide Emission and global temperature anomlay",
subtitle="World wide data",
caption="Source: U.S. EPICA",x="Years", y="Amount(scaled)")+
theme_classic()
df_g <- data.frame( glotemp )
str(df_g)
i <- 1
ridge_new<- numeric()
glo<- as.numeric(df_g_y[,2])
i <- 1
ridge_new<- numeric()
glo<- as.numeric(df_g_y[,2])
df_g <- as.numeric(df_g)
i <- 1
ridge_new<- numeric()
glo<- as.numeric(df_g_y[,2])
i <- 1
ridge_new<- numeric()
glo<- as.numeric(df_g_y[,2])
df_g <- data.frame( glotemp )
df_g_y<- as.numeric(df_g[,1])
df_g_1<- as.numeric(df_g[,2])
df_g_2<- as.numeric(df_g[,3])
df_g_3<- as.numeric(df_g[,4])
df_g_4<- as.numeric(df_g[,5])
df_g_5<- as.numeric(df_g[,6])
df_g_6<- as.numeric(df_g[,7])
df_g_7<- as.numeric(df_g[,8])
df_g_8<- as.numeric(df_g[,9])
df_g_9<- as.numeric(df_g[,10])
df_g_10<- as.numeric(df_g[,11])
df_g_11<- as.numeric(df_g[,12])
df_g_12<- as.numeric(df_g[,13])
df_g_a<- as.numeric(df_g[,14])
i <- 1
ridge_new<- numeric()
glo<- as.numeric(df_g_y[,2])
df_g <- data.frame( rbind(df_g_y, df_g_1, df_g_2, df_g_3, df_g_4, df_g_5, df_g_6, df_g_7, df_g_8, df_g_9,df_g_10,df_g_11, df_g_12, df_g_a) )
df_g <- as.data.frame(t(as.matrix(df_g)))
rownames(df_g)<-c()
colnames(df_g) <- c("year","jan","feb","mar","apr","may","june","july","aug","sep","oct","nov","dec","ave")
df_g <- df_g[1:139,]
head(df_g)
str(df_g)
new_data <- cat(df_g$jan, df_g$feb)
new_data <- cat(df_g$jan, df_g$feb)
new_data <- cat(df_g[,1], df_g[,2])
new_data <- cat(df_g[,2], df_g[,3])
new_data <- cbind(df_g[,2], df_g[,3])
new_data <- cbind(df_g[,2], df_g[,3])
new_data
new_data <- concat(df_g[,2], df_g[,3])
new_data <- cat(df_g[,2], df_g[,3])
new_data <- cat(matrix(df_g[,2], df_g[,3]) )
newdata <- rep(na)
x <-1
repeat{
new_data[,1] <- cat(df_g[,1])
x <- x+1
if (x==13){
break
}
}
newdata <- data.frame(matrix(NA, nrow=12*138, ncol=3 ))
x <-1
repeat{
new_data[,1] <- cat(df_g[,1])
x <- x+1
if (x==13){
break
}
}
View(newdata)
new_data_set <- t(df_g)
View(new_data_set)
new_data[,2] <- matrix( cat(df_g[,2], df_g[,3], df_g[,4], df_g[,5], df_g[,6], df_g[,7], df_g[,8], df_g[,9], df_g[,10], df_g[,11], df_g[,12]) )
if(x==139){
} break
x <-1
repeat{
print(jan)
x=x+1
if(x==139){
} break
x <-1
repeat{
print(jan)
x=x+1
if(x==139){
break}
}
x <-1
repeat{
print(jan)
x=x+1
if(x==139){
break}
}
print("jan")
x <-1
repeat{
print("jan")
x=x+1
if(x==139){
break}
}
